<Controls:MetroWindow x:Class="AzureSearchTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Azure Search Tool" Height="890" Width="1084" xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:azureSearchTool="clr-namespace:AzureSearchTool"
                      BorderBrush="Black" Icon="/Images/AzureSearch_Logo.ico" SaveWindowPosition="True">

    <Window.DataContext>
        <azureSearchTool:SearchModel></azureSearchTool:SearchModel>
    </Window.DataContext>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <azureSearchTool:HideIfEmptyConverter x:Key="HideIfEmptyConverter" />
            <azureSearchTool:HideIfFalseConverter x:Key="HideIfFalseConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl >
            <Controls:Flyout Header="Connection &amp; Indexes" Position="Left" Width="500" Name="Flyout">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Column="0" Grid.Row="0" Margin="20 20 20 20">
                        <RichTextBox BorderThickness="0">
                            <FlowDocument>
                                <Section>
                                    <Paragraph Margin="20,20,0,0">
                                        Enter the
                                        <Bold>Azure Search Service Name</Bold> (the part of the REST Url before the .search.windows.net) and one of the
                                        <Bold>API Keys</Bold> (Admin, Secondary or Query Key)
                                    </Paragraph>
                                    <Paragraph Margin="20,20,0,0">
                                        You will find the values in the Azure Portal.
                                    </Paragraph>
                                </Section>
                            </FlowDocument>
                        </RichTextBox>
                    </StackPanel>
                    <GroupBox Grid.Row="1" Grid.Column="0" Header="Connection Details" Margin="30 0 30 0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="80"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="Service Name"></Label>
                            <TextBox  Grid.Row="0" Grid.Column="1" Text="{Binding Service}"></TextBox>
                            <Label Grid.Row="1" Grid.Column="0" Content="Key-Type"></Label>
                            <DockPanel Grid.Row="1" Grid.Column="1">
                                <RadioButton Content="Admin" IsChecked="{Binding IsAdminApiKey}"  ToolTip="If available use the admin key"></RadioButton>
                                <RadioButton Margin="10 0 0 0" IsChecked="{Binding IsQueryApiKey}" Content="Query" ToolTip="The query key reduces the functionality of this tool to the query capabilities"></RadioButton>
                            </DockPanel>
                            <Label Grid.Row="2" Grid.Column="0" Content="API Key"></Label>
                            <TextBox  Grid.Row="2" Grid.Column="1" Text="{Binding ApiKey}"></TextBox>
                            <StackPanel Grid.Row="3" Grid.Column="1" >
                                <Button ToolTip="Connect" Margin="0 10 0 0" Click="Connect">
                                    <Rectangle Width="30" Height="30">
                                        <Rectangle.Fill>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_connect}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Button>
                                <Label Content="Connect" HorizontalAlignment="Center"></Label>
                            </StackPanel>
                            <Label Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Foreground="Red" Content="{Binding Error}" Visibility="{Binding Converter={StaticResource HideIfEmptyConverter}, Path=Error}"></Label>
                        </Grid>
                    </GroupBox>
                    <StackPanel Grid.Row="2" Grid.Column="0" Visibility="{Binding Converter={StaticResource HideIfFalseConverter}, Path=Connected}">


                        <GroupBox  Header="Select Index" Margin="30 30 30 30" Visibility="{Binding Converter={StaticResource HideIfFalseConverter}, Path=IsQueryApiKey}">
                            <StackPanel >
                                <TextBlock>Select an Index</TextBlock>
                                <TextBox Name="IndexName" Text="{Binding IndexName}"></TextBox>
                                <Button ToolTip="Select Index" Margin="0 10 0 0" Click="SelectIndex">
                                    <Rectangle Width="30" Height="30">
                                        <Rectangle.Fill>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list_select}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Button>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox  Header="Available Indexes" Margin="30 30 30 30" Visibility="{Binding Converter={StaticResource HideIfFalseConverter}, Path=IsAdminApiKey}">
                            <StackPanel >
                                <TextBlock>Select an Index</TextBlock>
                                <DataGrid ItemsSource="{Binding Indexes}" Margin="0 20 0 0" SelectionMode="Single" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" Name="GridAvailableIndexes">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" Width="300"></DataGridTextColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button ToolTip="Select Index" Margin="0 10 0 0" Click="SelectIndex">
                                    <Rectangle Width="30" Height="30">
                                        <Rectangle.Fill>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list_select}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Button>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Grid>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>

    <Grid Name="Grid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Grid.ColumnSpan="2" Height="30">
            <MenuItem Header="_File">
                <MenuItem Header="_Exit" />
            </MenuItem>
            <MenuItem Header="_Connection">
                <MenuItem Header="_Index" Click="MenuItem_Index_OnClick" />
                <MenuItem Header="_Status" />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About" Click="MenuItem_About_OnClick" />
            </MenuItem>
        </Menu>

        <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding Url, Mode=OneWay}" IsReadOnly="True"></TextBox>

        <TabControl Grid.Row="2" Grid.Column="1" Margin="24,0,0,0" Name="tabResults">

            <TabItem Header="Search">
                <DataGrid ItemsSource="{Binding SearchResults, Mode=OneWay}" IsReadOnly="True" Name="GridSearchResults" AutoGenerateColumns="False" />
            </TabItem>

            <TabItem Header="Index">
                <StackPanel>
                    <Label Content="Schema:" FontWeight="Bold" Margin="10 20 0 0"/>
                    <DataGrid ItemsSource="{Binding Index.Fields, Mode=OneWay}" IsReadOnly="True"></DataGrid>
                    <Label Content="Suggesters:" FontWeight="Bold" Margin="10 20 0 0"/>
                    <DataGrid ItemsSource="{Binding Index.Suggesters, Mode=OneWay}" IsReadOnly="True" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}"></DataGridTextColumn>
                            <DataGridTextColumn Header="SourceFields" Binding="{Binding SourceFieldsAsText}"></DataGridTextColumn>
                            <DataGridTextColumn Header="SearchMode" Binding="{Binding SearchMode}"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Content="Statistics:" FontWeight="Bold" Margin="10 20 0 0"/>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Grid.Row="0" Content="Document Count:"></Label>
                        <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Index.Statistics.DocumentCount, Mode=OneWay}" IsReadOnly="True"></TextBox>
                        <Label Grid.Column="0" Grid.Row="1" Content="Storage Size:"></Label>
                        <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Index.Statistics.StorageSizeReadable, Mode=OneWay}" IsReadOnly="True"></TextBox>
                    </Grid>
                </StackPanel>
            </TabItem>

            <TabItem Header="Suggestion">
                <StackPanel>
                    <DataGrid ItemsSource="{Binding SuggestionResults, Mode=OneWay}" IsReadOnly="True" Name="GridSuggestionResults" AutoGenerateColumns="False" />
                </StackPanel>
            </TabItem>
            <TabItem Header="Facets">
                <StackPanel>
                    <Label Content="Facets"></Label>
                    <TextBlock><Run>Todo: Show the available facets here.</Run><LineBreak/>
                    </TextBlock>
                </StackPanel>
            </TabItem>
            <TabItem Header="Raw">
                <ScrollViewer>
                    <TextBox Text="{Binding SearchResultRaw}" IsReadOnly="True" IsReadOnlyCaretVisible="False" TextWrapping="Wrap"></TextBox>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Test Data">
                <StackPanel>
                    <Label Content="Facets"></Label>
                    <TextBlock><Run>Todo: Easy upload of test data in an excel style grid</Run><LineBreak/>
                    </TextBlock>
                </StackPanel>
            </TabItem>
        </TabControl>

        <TabControl Name="tabcontrolSearchMode"  HorizontalAlignment="Left" Height="749" Margin="10,10,0,0" Grid.Row="2" Grid.Column="0" VerticalAlignment="Top" Width="309" Grid.ColumnSpan="2" SelectionChanged="SearchMode_OnSelectionChanged">
            <TabItem Header="Search">
                    <StackPanel Margin="0,0,0,40" VerticalAlignment="Top" MinHeight="630" Orientation="Vertical">
                        <GroupBox Header="Query" HorizontalAlignment="Left" Margin="0,22,0,0" Grid.Row="2" Grid.Column="0" VerticalAlignment="Top" Width="280">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="60"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <TextBox Grid.Row="0" Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged}" KeyUp="Searchbox_KeyUp"></TextBox>
                                    <Button Grid.Row="0" Grid.Column="1" Content="Search" Width="50" Height="25" Click="Search"></Button>
                                </Grid>
                            </StackPanel>
                        </GroupBox>
                        <TextBlock HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="280" Text="{Binding Error}" Foreground="Red"/>
                    <StackPanel ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <GroupBox Header="Query Options" HorizontalAlignment="Left" Margin="0,10,0,0" VerticalAlignment="Top" Height="580" Width="280">
                            <ScrollViewer>
                                <Grid Height="830" ScrollViewer.VerticalScrollBarVisibility="Visible">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="111"/>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="93"/>
                                        <ColumnDefinition Width="24"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition  Height="30"/>
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition  Height="30"/>
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="$filter"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. A structured search expression in standard OData syntax. See OData Expression Syntax for Azure Search for details on the subset of the OData expression grammar that Azure Search supports." Grid.ColumnSpan="2"></TextBox>
                                    <Button  Grid.Column="3" Grid.Row="0" Width="20" Height="20" VerticalAlignment="Top" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="Paste example" HorizontalAlignment="Left" Margin="5,5,-1,0" Visibility="Visible" Click="FilterExample">
                                        <Rectangle Width="10" Height="10">
                                            <Rectangle.Fill>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_clipboard_paste}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Button>

                                    <Label Grid.Column="0" Grid.Row="1" Content="$top"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Top, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. The number of search results to retrieve. This defaults to 50. If you specify a value greater than 1000 and there are more than 1000 results, only the first 1000 results will be returned, along with a link to the next page of results (see @odata.nextLink in the example below)." Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="2" Content="$skip"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Skip, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use $skip due to this limitation, consider using $orderby on a totally-ordered key and $filter with a range query instead." Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="3" Content="searchMode"></Label>
                                    <ComboBox Grid.Column="1" Grid.Row="3" ItemsSource="{Binding AvailableSearchModes, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SearchMode}" ToolTip="Optional. Defaults to any. Specifies whether any or all of the search terms must be matched in order to count the document as a match." Grid.ColumnSpan="2"></ComboBox>

                                    <Label Grid.Column="0" Grid.Row="4" Content="searchFields"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding SearchFields, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. The list of comma-separated field names to search for the specified text. Target fields must be marked as searchable." Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="5" Content="count"></Label>
                                    <ComboBox Grid.Column="1" Grid.Row="5" Text="true" SelectedItem="{Binding Count, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding AvailableCountModes}" ToolTip="Optional. Defaults to false. Specifies whether to fetch the total count of results. Setting this value to true may have a performance impact. Note that the count returned is an approximation." Grid.ColumnSpan="2"></ComboBox>

                                    <Label Grid.Column="0" Grid.Row="6" Content="orderby"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="6" Text="{Binding Orderby, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. A list of comma-separated expressions to sort the results by. Each expression can be either a field name or a call to the geo.distance() function. Each expression can be followed by asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match score. There is a limit of 32 clauses for $orderby." Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="7" Content="select"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="7" Text="{Binding Select, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. A list of comma-separated fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included. You can also explicitly request all fields by setting this parameter to *." Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="8" Content="facet"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="8" Text="{Binding Facet, UpdateSourceTrigger=PropertyChanged}" ToolTip="Zero or more fields to facet by. Optionally, the string may contain parameters to customize the faceting, expressed as comma-separated name:value pairs. Valid parameters are: ..." Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="9" Content="highlight"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="9" Text="{Binding Highlight, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. A set of comma-separated field names used for hit highlights. Only searchable fields can be used for hit highlighting." Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="10" Content="highlightPreTag"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="10" Text="{Binding HighlightPreTag, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. Defaults to &lt;/em&gt;. A string tag that appends to hit highlights. Must be set with highlightPostTag. Reserved characters in URL must be percent-encoded (for example, %23 instead of #)." Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="11" Content="highlightPostTag"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="11" Text="{Binding HighlightPostTag, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. Defaults to $lt;/em&gt;. A string tag that appends to hit highlights. Must be set with highlightPreTag. Reserved characters in URL must be percent-encoded (for example, %23 instead of #)." Grid.ColumnSpan="2" ></TextBox>

                                    <Label Grid.Column="0" Grid.Row="12" Content="scoringProfile"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="12" Text="{Binding ScoringProfile, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="13" Content="scoringParameter"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="13" Text="{Binding ScoringParameter, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2"></TextBox>

                                    <Label Grid.Column="0" Grid.Row="14" Content="api-version"></Label>
                                    <ComboBox Grid.Column="1" Grid.Row="14" Text="{Binding ApiVersion, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding AvailableApiVersions}"  ToolTip="Selects the API-Version (this will be a dropdown soon)" Grid.ColumnSpan="2"></ComboBox>

                                    <Label Grid.Column="0" Grid.Row="15" Content="minimumCoverage"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="15" Text="{Binding MinimumCoverage, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. Defaults to 100. A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. By default, the entire index must be available or the Search operation will return HTTP status code 503. If you set minimumCoverage and Search succeeds, it will return HTTP 200 and include a @search.coverage value in the response indicating the percentage of the index that was included in the query." Grid.ColumnSpan="2" />

                                    <Label Grid.Column="0" Grid.Row="16" Content="luceneSearchType"></Label>
                                    <TextBox Grid.Column="1" Grid.Row="16" Text="{Binding LuceneSearchType, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. Specify Lucene parser type, can be full ro simple" Grid.ColumnSpan="2" />
                                </Grid>
                            </ScrollViewer>
                        </GroupBox>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Suggestions" Margin="5,0,-5,0">
                <StackPanel>
                    <GroupBox Header="Suggestion">
                        <TextBox Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged}" KeyUp="Suggestion_KeyUp" Name="Suggestion"></TextBox>
                    </GroupBox>
                    <TextBlock HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="45" Width="280" Text="{Binding Error}" Foreground="Red"/>
                    <GroupBox Header="Query Options" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="2" Grid.Column="0" VerticalAlignment="Top"  Width="280" Height="451">
                        <ScrollViewer Margin="0,0,0,0">
                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="111"/>
                                    <ColumnDefinition Width="133"/>
                                    <ColumnDefinition Width="24"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                    <RowDefinition  Height="30" />
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="0" Content="$filter"></Label>
                                <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. A structured search expression in standard OData syntax. See OData Expression Syntax for Azure Search for details on the subset of the OData expression grammar that Azure Search supports."></TextBox>

                                <Label Grid.Column="0" Grid.Row="1" Content="highlightPreTag"></Label>
                                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding HighlightPreTag, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. Defaults to &lt;/em&gt;. A string tag that appends to hit highlights. Must be set with highlightPostTag. Reserved characters in URL must be percent-encoded (for example, %23 instead of #)."></TextBox>

                                <Label Grid.Column="0" Grid.Row="2" Content="highlightPostTag"></Label>
                                <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding HighlightPostTag, UpdateSourceTrigger=PropertyChanged}" ToolTip="Optional. Defaults to $lt;/em&gt;. A string tag that appends to hit highlights. Must be set with highlightPreTag. Reserved characters in URL must be percent-encoded (for example, %23 instead of #)." ></TextBox>

                                <Label Grid.Column="0" Grid.Row="3" Content="suggesterName"></Label>
                                <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding SuggesterName, UpdateSourceTrigger=PropertyChanged}" ToolTip="" ></TextBox>

                                <Label Grid.Column="0" Grid.Row="4" Content="fuzzy"></Label>
                                <CheckBox Grid.Column="1" Grid.Row="4" IsChecked="{Binding Fuzzy, UpdateSourceTrigger=PropertyChanged}" ToolTip="" ></CheckBox>

                                <Label Grid.Column="0" Grid.Row="5" Content="searchFields"></Label>
                                <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding SearchFields, UpdateSourceTrigger=PropertyChanged}" ToolTip="" ></TextBox>

                                <Label Grid.Column="0" Grid.Row="6" Content="$top"></Label>
                                <TextBox Grid.Column="1" Grid.Row="6" Text="{Binding Top, UpdateSourceTrigger=PropertyChanged}" ToolTip="" ></TextBox>

                                <Label Grid.Column="0" Grid.Row="7" Content="$orderby"></Label>
                                <TextBox Grid.Column="1" Grid.Row="7" Text="{Binding Orderby, UpdateSourceTrigger=PropertyChanged}" ToolTip="" ></TextBox>

                                <Label Grid.Column="0" Grid.Row="8" Content="$select"></Label>
                                <TextBox Grid.Column="1" Grid.Row="8" Text="{Binding Select, UpdateSourceTrigger=PropertyChanged}" ToolTip="" ></TextBox>

                                <Label Grid.Column="0" Grid.Row="9" Content="minimumCoverage"></Label>
                                <TextBox Grid.Column="1" Grid.Row="9" Text="{Binding MinimumCoverage, UpdateSourceTrigger=PropertyChanged}" ToolTip="" ></TextBox>

                                <Label Grid.Column="0" Grid.Row="10" Content="api-version"></Label>
                                <ComboBox Grid.Column="1" Grid.Row="10" Text="{Binding ApiVersion, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding AvailableApiVersions}"  ToolTip="Selects the API-Version (this will be a dropdown soon)"></ComboBox>

                            </Grid>
                        </ScrollViewer>
                    </GroupBox>
                </StackPanel>
            </TabItem>
        </TabControl>

        <StatusBar Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
            <TextBox Width="300" Text="{Binding Status}"></TextBox>
            <Controls:MetroProgressBar Height="25" IsIndeterminate="False" Foreground="White" Width="500" Name="ProgressBar" />
        </StatusBar>

    </Grid>
</Controls:MetroWindow>
